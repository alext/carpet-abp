name: Publish Release

on:
  release:
    types: [published]
jobs:
  Get-Properties:
    runs-on: ubuntu-latest
    outputs:
      matrix-exclude-branch: ${{ steps.processmatrix.outputs.matrix-to-exclude }}
      extra-branch-name: ${{ steps.properties.outputs.release-extra-branch-name }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v3
      - name: Determine release type
        id: type
        run: |
          if ${{ github.event.release.prerelease }}; then
            echo "release-type=beta" >> $GITHUB_OUTPUT
          else
            echo "release-type=release" >> $GITHUB_OUTPUT
          fi
      - name: Read relevant fields from gradle.properties
        id: properties
        run: | # From christian-draeger/read-properties, using the action makes it extremely messy until christian-draeger/read-properties#2
          path='./gradle.properties'
          for property in mod_version minecraft_version release-extra-branch release-extra-branch-name
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo "$property=$result" >> $GITHUB_OUTPUT
          done
      - name: Process property for matrix
        id: processmatrix
        run: |
          if ! ${{ steps.properties.outputs.release-extra-branch }}; then
            echo "matrix-to-exclude=Snapshots" >> $GITHUB_OUTPUT
          fi
      - uses: actions/github-script@v6
        env:
          READ_VERSION: ${{ steps.properties.outputs.mod_version }}
        with:
          script: |
            const { READ_VERSION } = process.env;
            console.log('Read version is: ' + READ_VERSION);
            let releases = (await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            })).data;
            if (releases.length <= 1) {
              console.log('No previous releases');
              return
            }
            console.log('Previous release was: ' + releases[1].name);
            for (let release of releases.slice(1)) {
              if (release.name.includes(READ_VERSION))
                core.setFailed('Version number is the same as a previous release!')
            }
  Build-And-Publish:
    runs-on: ubuntu-latest
    needs: [Get-Properties]
    strategy:
      matrix:
        branch: [Release, Snapshots]
        exclude:
          - branch: ${{ needs.Get-Properties.outputs.matrix-exclude-branch }}
    steps:
      - name: Get info from branch to run
        id: getbranchinfo
        run: |
          if ${{ matrix.branch == 'Snapshots'}}; then
            echo "branchname=${{ needs.Get-Properties.outputs.extra-branch-name }}" >> $GITHUB_OUTPUT
          fi
      - name: Checkout the sources
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.getbranchinfo.outputs.branchname }}
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Find correct JAR
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "jarname=$output" >> $GITHUB_OUTPUT
      - name: Save build artifacts in the action
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts for ${{ matrix.branch }}
          path: build/libs
      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.findjar.outputs.jarname }}
          asset_name: ${{ steps.findjar.outputs.jarname }}
          asset_content_type: application/java-archive
